---

apiVersion: v1
kind: Service
metadata:
  labels:
    app: aceitchecripto-psql-service
  name: aceitchecripto-psql-service
  namespace: default

spec:
  selector:
    app: aceitchecripto-psql # This references the name of the pod(s) this service will connect to.  If there is more than one replica the service will auto load balance.
  ports:
    - name: http
      protocol: TCP
      port: 5432  # Port things will connect to this service on.  This port can be different from the target port.  Think of the service like a NAT proxy.
      targetPort: 5432  # Port the Pod is listening on.

---

apiVersion: apps/v1
kind: Deployment

metadata:
  labels:
    app: aceitchecripto-psql
  name: aceitchecripto-psql
  namespace: default

spec:
  replicas: 1 # Number of Pods to run in this deployment.  In this case NO copies.
  selector:
    matchLabels:
      app: aceitchecripto-psql # Name of the Pod template below that this deployment is managing.
  template:
    metadata:
      labels:
        app: aceitchecripto-psql  # Name of the Pod.  This name is important because our service will reference it.
    spec:
      restartPolicy: Always
      containers:
        - name: aceitchecripto-psql
          image: aceitchecripto/psql:latest  # Use this image to create our pods from.
          imagePullPolicy: IfNotPresent # The image by default will get pulled from Dockerhub if it is not local.
          env:
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: aceitchecripto-secret
                  key: postgres_user
                  optional: false # same as default; "aceitchecripto-secret" must exist
                  # and include a key named "postgres_user"
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: aceitchecripto-secret
                  key: postgres_password
                  optional: false # same as default; "aceitchecripto-secret" must exist
                  # and include a key named "postgres_password"